# CLIENT OPERATIONS

# Obtener todos los clientes
GET http://localhost:3001/api/clients
Content-Type: application/json

###

# Obtener un cliente por email
GET http://localhost:3001/api/clients/tayet.nunez@gmail.com
Content-Type: application/json

###

# Crear un nuevo cliente
POST http://localhost:3001/api/clients
Content-Type: application/json

{
    "name": "Juan",
    "email": "tayet.nunez@gmail.com",
    "password": "Contraseña123"
}

###

# Iniciar sesión como cliente
POST http://localhost:3001/api/auth/login
Content-Type: application/json

{
    "email": "tayet.nunez@gmail.com",
    "password": "Contraseña123",
    "role": "client"
}

###

# Actualizar un cliente
PUT http://localhost:3001/api/clients/1
Content-Type: application/json

{
    "name": "Diego Alejandro Updated",
    "email": "diego.mazas.updated@gmail.com",
    "password": "nueva_contraseña"
}

###

# Eliminar un cliente
DELETE http://localhost:3001/api/clients/1
Content-Type: application/json

###

# ADMINISTRATOR OPERATIONS

# Obtener todos los administradores
GET http://localhost:3001/api/administrators
Content-Type: application/json

###

# Obtener un administrador por email
GET http://localhost:3001/api/administrators/admin.user@gmail.com
Content-Type: application/json

###

# Crear un nuevo administrador
POST http://localhost:3001/api/administrators
Content-Type: application/json

{
    "name": "Admin User",
    "email": "admin.user@gmail.com",
    "password": "Admin_password123"
}

###

# Iniciar sesión como administrador
POST http://localhost:3001/api/auth/login
Content-Type: application/json

{
    "email": "admin.user@gmail.com",
    "password": "Admin_password123",
    "role": "administrator"
}

###

# Actualizar un administrador
PUT http://localhost:3001/api/administrators/4
Content-Type: application/json

{
    "name": "Admin User Updated",
    "email": "admin.user.updated@gmail.com",
    "password": "New_admin_password123"
}

###

# Eliminar un administrador
DELETE http://localhost:3001/api/administrators/4
Content-Type: application/json

###

# TEACHER OPERATIONS

# Obtener todos los profesores
GET http://localhost:3001/api/teachers
Content-Type: application/json

###

# Obtener un profesor por email
GET http://localhost:3001/api/teachers/teacher.user@gmail.com
Content-Type: application/json

###

# Crear un nuevo profesor
POST http://localhost:3001/api/teachers
Content-Type: application/json

{
    "name": "Teacher User",
    "email": "teacher.user@gmail.com",
    "password": "Teacher_password1",
    "specialty": "Mathematics",
    "description": "Experienced math teacher"
}

###

# Iniciar sesión como profesor
POST http://localhost:3001/api/auth/login
Content-Type: application/json

{
    "email": "teacher.user@gmail.com",
    "password": "Teacher_password1",
    "role": "teacher"
}

###

# Actualizar un profesor
PUT http://localhost:3001/api/teachers/1
Content-Type: application/json

{
    "name": "Teacher User Updated",
    "email": "teacher.user.updated@gmail.com",
    "password": "new_teacher_password",
    "specialty": "Physics",
    "description": "Experienced physics teacher"
}

###

# Eliminar un profesor
DELETE http://localhost:3001/api/teachers/1
Content-Type: application/json
